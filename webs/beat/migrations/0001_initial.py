# Generated by Django 3.2.5 on 2021-08-09 17:18

import beat.models
import beat.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClockedSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clocked_time', models.DateTimeField(verbose_name='日期定时')),
            ],
            options={
                'verbose_name': '日期定时',
                'verbose_name_plural': '日期定时',
                'ordering': ['clocked_time'],
            },
        ),
        migrations.CreateModel(
            name='CrontabSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.CharField(default='*', help_text='Cron Minutes to Run. Use "*" for "all". (Example: "0,30")', max_length=240, validators=[beat.validators.minute_validator], verbose_name='分(s)')),
                ('hour', models.CharField(default='*', help_text='Cron Hours to Run. Use "*" for "all". (Example: "8,20")', max_length=96, validators=[beat.validators.hour_validator], verbose_name='小时(s)')),
                ('day_of_week', models.CharField(default='*', help_text='Cron Days Of The Week to Run. Use "*" for "all". (Example: "0,5")', max_length=64, validators=[beat.validators.day_of_week_validator], verbose_name='天(s)/周')),
                ('day_of_month', models.CharField(default='*', help_text='Cron Days Of The Month to Run. Use "*" for "all". (Example: "1,15")', max_length=124, validators=[beat.validators.day_of_month_validator], verbose_name='天(s)/月')),
                ('month_of_year', models.CharField(default='*', help_text='Cron Months Of The Year to Run. Use "*" for "all". (Example: "0,6")', max_length=64, validators=[beat.validators.month_of_year_validator], verbose_name='月(s)/年')),
                ('timezone', timezone_field.fields.TimeZoneField(default=beat.models.crontab_schedule_celery_timezone, help_text='Timezone to Run the Cron Schedule on. Default is UTC.', verbose_name='时区')),
            ],
            options={
                'verbose_name': '计划任务',
                'verbose_name_plural': '计划任务',
                'ordering': ['month_of_year', 'day_of_month', 'day_of_week', 'hour', 'minute', 'timezone'],
            },
        ),
        migrations.CreateModel(
            name='IntervalSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('every', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='间隔数字')),
                ('period', models.CharField(choices=[('days', '天(s)'), ('hours', '小时(s)'), ('minutes', '分(s)'), ('seconds', '秒(s)'), ('microseconds', '微妙(s)')], max_length=24, verbose_name='间隔单位')),
            ],
            options={
                'verbose_name': '时间间隔',
                'verbose_name_plural': '时间间隔',
                'ordering': ['period', 'every'],
            },
        ),
        migrations.CreateModel(
            name='McnResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_name', models.CharField(max_length=50, verbose_name='运行名称')),
                ('result_desc', models.TextField(blank=True, verbose_name='运行描述')),
                ('result_date', models.DateTimeField(verbose_name='运行时间')),
                ('active', models.SmallIntegerField(choices=[(0, '失败'), (1, '成功')], default=0, verbose_name='是否运行成功')),
            ],
            options={
                'verbose_name': '结果列表',
                'verbose_name_plural': '结果列表',
                'db_table': 'mcn_result',
            },
        ),
        migrations.CreateModel(
            name='PeriodicTasks',
            fields=[
                ('ident', models.SmallIntegerField(default=1, primary_key=True, serialize=False, unique=True)),
                ('last_update', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='SolarSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(choices=[('dawn_astronomical', 'dawn_astronomical'), ('dawn_civil', 'dawn_civil'), ('dawn_nautical', 'dawn_nautical'), ('dusk_astronomical', 'dusk_astronomical'), ('dusk_civil', 'dusk_civil'), ('dusk_nautical', 'dusk_nautical'), ('solar_noon', 'solar_noon'), ('sunrise', 'sunrise'), ('sunset', 'sunset')], max_length=24, verbose_name='日照事件')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='纬度')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='经度')),
            ],
            options={
                'verbose_name': '日照事件',
                'verbose_name_plural': '日照事件',
                'ordering': ('event', 'latitude', 'longitude'),
                'unique_together': {('event', 'latitude', 'longitude')},
            },
        ),
        migrations.CreateModel(
            name='PeriodicTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='任务名称')),
                ('task', models.CharField(help_text='The Name of the Celery Task that Should be Run.  (Example: "proj.tasks.import_contacts")', max_length=200, verbose_name='队列名称')),
                ('args', models.TextField(blank=True, default='[]', help_text='JSON encoded positional arguments (Example: ["arg1", "arg2"])', verbose_name='位置参数')),
                ('kwargs', models.TextField(blank=True, default='{}', help_text='JSON encoded keyword arguments (Example: {"argument": "value"})', verbose_name='关键词参数')),
                ('queue', models.CharField(blank=True, default=None, help_text='Queue defined in CELERY_TASK_QUEUES. Leave None for default queuing.', max_length=200, null=True, verbose_name='Queue Override')),
                ('exchange', models.CharField(blank=True, default=None, help_text='Override Exchange for low-level AMQP routing', max_length=200, null=True, verbose_name='Exchange')),
                ('routing_key', models.CharField(blank=True, default=None, help_text='Override Routing Key for low-level AMQP routing', max_length=200, null=True, verbose_name='Routing Key')),
                ('headers', models.TextField(blank=True, default='{}', help_text='JSON encoded message headers for the AMQP message.', verbose_name='AMQP Message Headers')),
                ('priority', models.PositiveIntegerField(blank=True, default=None, help_text='Priority Number between 0 and 255. Supported by: RabbitMQ, Redis (priority reversed, 0 is highest).', null=True, validators=[django.core.validators.MaxValueValidator(255)], verbose_name='Priority')),
                ('expires', models.DateTimeField(blank=True, help_text='Datetime after which the schedule will no longer trigger the task to run', null=True, verbose_name='过期时间')),
                ('expire_seconds', models.PositiveIntegerField(blank=True, help_text='Timedelta with seconds which the schedule will no longer trigger the task to run', null=True, verbose_name='Expires timedelta with seconds')),
                ('one_off', models.BooleanField(default=False, help_text='If True, the schedule will only run the task a single time', verbose_name='是否一次性任务')),
                ('start_time', models.DateTimeField(blank=True, help_text='Datetime when the schedule should begin triggering the task to run', null=True, verbose_name='开始触发时间')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('last_run_at', models.DateTimeField(blank=True, editable=False, help_text='Datetime that the schedule last triggered the task to run. Reset to None if enabled is set to False.', null=True, verbose_name='上次触发时间')),
                ('total_run_count', models.PositiveIntegerField(default=0, editable=False, help_text='Running count of how many times the schedule has triggered the task', verbose_name='Total Run Count')),
                ('date_changed', models.DateTimeField(auto_now=True, help_text='Datetime that this PeriodicTask was last modified', verbose_name='最后修改时间')),
                ('description', models.TextField(blank=True, verbose_name='任务描述')),
                ('clocked', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='beat.clockedschedule', verbose_name='日期定时任务')),
                ('crontab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='beat.crontabschedule', verbose_name='计划任务任务')),
                ('interval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='beat.intervalschedule', verbose_name='时间间隔任务')),
                ('solar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='beat.solarschedule', verbose_name='日照事件任务')),
            ],
            options={
                'verbose_name': '任务运行',
                'verbose_name_plural': '任务运行',
            },
        ),
    ]
